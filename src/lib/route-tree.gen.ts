/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../routes/__root'
import { Route as GladiatorRouteImport } from './../routes/gladiator'
import { Route as CameraRouteImport } from './../routes/camera'
import { Route as ArenaRouteImport } from './../routes/arena'
import { Route as IndexRouteImport } from './../routes/index'

const GladiatorRoute = GladiatorRouteImport.update({
  id: '/gladiator',
  path: '/gladiator',
  getParentRoute: () => rootRouteImport,
} as any)
const CameraRoute = CameraRouteImport.update({
  id: '/camera',
  path: '/camera',
  getParentRoute: () => rootRouteImport,
} as any)
const ArenaRoute = ArenaRouteImport.update({
  id: '/arena',
  path: '/arena',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/arena': typeof ArenaRoute
  '/camera': typeof CameraRoute
  '/gladiator': typeof GladiatorRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/arena': typeof ArenaRoute
  '/camera': typeof CameraRoute
  '/gladiator': typeof GladiatorRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/arena': typeof ArenaRoute
  '/camera': typeof CameraRoute
  '/gladiator': typeof GladiatorRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/arena' | '/camera' | '/gladiator'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/arena' | '/camera' | '/gladiator'
  id: '__root__' | '/' | '/arena' | '/camera' | '/gladiator'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArenaRoute: typeof ArenaRoute
  CameraRoute: typeof CameraRoute
  GladiatorRoute: typeof GladiatorRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/gladiator': {
      id: '/gladiator'
      path: '/gladiator'
      fullPath: '/gladiator'
      preLoaderRoute: typeof GladiatorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/camera': {
      id: '/camera'
      path: '/camera'
      fullPath: '/camera'
      preLoaderRoute: typeof CameraRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/arena': {
      id: '/arena'
      path: '/arena'
      fullPath: '/arena'
      preLoaderRoute: typeof ArenaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArenaRoute: ArenaRoute,
  CameraRoute: CameraRoute,
  GladiatorRoute: GladiatorRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
